//TERMINAL RULES
{#simple complex but  for terminal IRTG rule generation#}
{=
{#import file#} 
dataFile :File := {"../test_codes/irtg_example2data"};
{#create list for the output out of copies of the terminal IRTG rule template#} 
result :List<Temp := {+ dataFile.termBase :+ dataFile.datas +} 
=}
{#add data to copies of the terminal IRTG rule template and extend it to the surroundings#} 
{*
{+ 
result :+ dataFile.datas : 
	0.slots.iter:+0, 
	1.slots.iter:+1, 
	2.slots.iter:+2, 
	3.slots.iter:+3, 
	4.slots.iter:+4, 
	5.slots.iter:+5, 
	6.slots.iter:+6, 
	7.slots.iter:+7, 
	8.slots.iter:+8, 
	9.slots.iter:+9 
+}: {@e@} 
*}


{#
OUTPUT:
//TERMINAL RULES

	NN -> dog_NN
	[string] dog
	[tree] NN(dog)
	[ud] "(dog<root>\dog)"
	[4lang] "(dog<root>\dog)"

	NN -> cat_NN
	[string] cat
	[tree] NN(cat)
	[ud] "(cat<root>\cat)"
	[4lang] "(cat<root>\cat)"

	NN -> fish_NN
	[string] fish
	[tree] NN(fish)
	[ud] "(fish<root>\fish)"
	[4lang] "(fish<root>\fish)"

	NN -> mouse_NN
	[string] mouse
	[tree] NN(mouse)
	[ud] "(mouse<root>\mouse)"
	[4lang] "(mouse<root>\mouse)"

	NN -> lion_NN
	[string] lion
	[tree] NN(lion)
	[ud] "(lion<root>\lion)"
	[4lang] "(lion<root>\lion)"

	NN -> monkey_NN
	[string] monkey
	[tree] NN(monkey)
	[ud] "(monkey<root>\monkey)"
	[4lang] "(monkey<root>\monkey)"

	NN -> fox_NN
	[string] fox
	[tree] NN(fox)
	[ud] "(fox<root>\fox)"
	[4lang] "(fox<root>\fox)"

	NN -> bird_NN
	[string] bird
	[tree] NN(bird)
	[ud] "(bird<root>\bird)"
	[4lang] "(bird<root>\bird)"

	NN -> tiger_NN
	[string] tiger
	[tree] NN(tiger)
	[ud] "(tiger<root>\tiger)"
	[4lang] "(tiger<root>\tiger)"

	NN -> owl_NN
	[string] owl
	[tree] NN(owl)
	[ud] "(owl<root>\owl)"
	[4lang] "(owl<root>\owl)"
#}



